name: Build and Deploy for Linux

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Go application for Linux
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2' # Use Go version 1.24.2

      # Step 3: Cache Go modules and build artifacts
      - name: Cache Go modules and builds
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            $HOME/go/pkg
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Step 4: Run tests before building
      - name: Run Go Tests
        run: go test ./...

      # Step 5: Build the application for Linux
      - name: Compile Go binary for Linux
        shell: bash
        run: |
          mkdir -p build
          GOOS=linux GOARCH=amd64 go build -o build/seuic_reader main.go
          ls -lh build/

      # Step 6: Upload the artifact (optional)
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: seuic_reader-linux-amd64
          path: build/

  deploy:
    name: Deploy the application
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Add deployment script (optional)
      - name: Deploy to Remote Server
        run: |
          echo "Deploy scripts go here"